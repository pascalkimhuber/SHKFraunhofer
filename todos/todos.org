#+STARTUP: logdone

* Organization

** Commit conventions
1. Name branch I am working in.
2. Be explicit about what has been done.
3. Mark if a "project" is finished.


* Configurations

** TODO Change passwords
Wait for Mail from IT. Change password if smartcard is there!


* Emacs

** Language evaluation in org mode (see http://zeekat.nl/articles/making-emacs-work-for-me.html#sec-10)
** DONE Qt Auto complete
   CLOSED: [2014-04-16 Wed 15:04]

** TODO Syntax highlighting for doxygen comments in c++ mode.

** TODO Setter and getter methods.

** TODO Rewrite Arbeitszeiten section


* Nuetzliches

** Tremolo aktualisieren

Nachdem eine neue Version des Tremolo-Ordners gepullt wurde, kann Tremolo wie folgt aktualisiert werden:
: cd ~/tremolo/build
: make && make install

Das selbe gilt für Tremologui.
: cd ~/tremologui/build
: make && make install


** Gnuplot Befehle

Einen Ueberblick zu nuetzlichen Gnuplot Befehlen kann auf der folgenden Seite gefunden werden: http://people.duke.edu/~hpgavin/gnuplot.html

1. Um ein Data-file (zum Beispiel =*.epot*=) mit Gnuplot zu plotten, verwendet man: \\
   : gnuplot> plot "./argon.epot" using 1:2
   Hierbei wird die zweite Spalte gegen die erste Spalte aufgetragen.
2. Dies kann auch mit mehreren Files gleichzeitig getan werden: \\
   : gnuplot> plot "./argon.etot" using 1:2, "./argon.ekin" using 1:2, "./argon.epot" using 1:2
3. Um den Achsenabschnitt zu veraendern, verwendet man: \\
   : gnuplot> plot "./argon.epot" using 1:2; set yrange [-0.1: 2]
4. Den urspruenglichen Achsenabschnitt kann man wie folgt wieder herstellen: \\
   : gnuplot> plot "./argon.epot" using 1:2; set autoscale
5. Mit \\
   : gnuplot> replot
   kann der Plot aktualisiert werden.
6. Eine Uebersicht von =set= Befehlen:
   Create a title:
   : set title "Force-Deflection Data"
   Put a label on the x-axis:
   : set xlabel "Deflection (meters)"
   Put a label on the y-axis:
   : set ylabel "Force (kN)"
   Change the x-axis range:
   : set xrange [0.001:0.005]
   Change the y-axis range:
   : set yrange [20:500]
   Have Gnuplot determine ranges:
   : set autoscale
   Move the key:
   : set key 0.01,100
   Delete the key:
   : unset key
   Put a label on the plot:
   : set label "yield point" at 0.003, 260
   Remove all labels:
   : unset label
   Plot using log-axes:
   : set logscale
   Plot using log-axes on y-axis:
   : unset logscale; set logscale y
   Change the tic-marks:
   : set xtics (0.002,0.004,0.006,0.008)
   Return to the default tics:
   : unset xtics; set xtics auto
   Set output:
   : set output 'introduction.png'


** Grep Befehle

http://www.panix.com/~elflord/unix/grep.html


** Git Befehle

*** Branches
- Create a new branch:
  : git branch <name_of_new_branch>
- Create a new branch by pulling from a remote branch:
  : git checkout -b <name_of_new_branch> origin/<name_of_branch>
- Delete a local branch:
  : git branch -d <name_of_branch>
- Naming convention: use well defined tokes like
  : feature
  : bugfix
  : test
  followed by a slash '/' and a describing name, e.g.:
  : feature/potentials

*** Diff
- Show differences between <branch1> and <branch2>
  : git diff <branch1>..<branch2>

*** Manipulate changes.
- Remove untracked files:
  : git clean -f -d

*** Add and remove changes.
- Remove deleted files from stack:
  : git add -u .

*** Remote repositories
- Add remote repository with name /origin/ (e.g. https://pascalkimhuber@bitbucket.org/pascalkimhuber/stacked.git)
  : git remote add origin <address of remote>
- Push a local repository to a remote repository with name /origin/ for the first time
  : git push -u origin --all

*** Merging branches
- Merge <branch1> into <branch2>
  : git checkout <branch2>
  : git merge <branch1>


** Find Befehle

- Find all files with names containing =<pattern>= (wildcards have to be used with a preceeding backslash!):
  : find -name <pattern>
  or e.g.
  : find -name <pattern>\*


** Doxygen Befehle

- [[http://www.stack.nl/~dimitri/doxygen/manual/commands.html#cmdc][List of special commands]]


* Aufgaben
  - Note taken on [2014-04-16 Wed 15:57] \\
        Besprechung mit Christian um [2014-04-16 Wed 15:57]
        Zwei Aufgabenziele:
        1. Kurzfristiges Ziel:
           Überarbeitung des "potentials" tabs
           - Übernehme Elemente von "Datafile" tab
           - Obere 2/3 des Tabs: Editor-Fenster in das ein Potentials-file geladen werden soll
                 - der Editor soll die Funktionen "open" and "save" bereitstellen
                 - open-button:
                   + soll erweiterbar sein (d.h. es sollen noch mögliche "Suchfunktionen" eingebunden werden können -> handler)
                   + vorerst: einen beliebigen Ordner öffnen
                   + nach .potential files filtern
                   + nachdem der Nutzer ein file ausgewählt hat, soll eine Kopie des files in den Projekt-Ordner gelegt werden mit dem Namen "PROJECTNAME.potentials"
                   + falls nach Sicherung eines .potential-files ein weiteres file geöffnet wird, soll eine Warnung zum "Datenverlust" abgegeben werden.
                 - save-button:
                   + speichert die Änderungen im .potentials file.
           - Stelle sicher, dass immer ein .validates-file erzeugt wird (notfalls auch leer (default)).
        2. Langfristiges Ziel:
           - Verifizieren von Ensembles
           - etwas mit Monte-Carlo Methoden (siehe folgende Links)
                 - [[file:~/Work/literature/Possible%20Master%20topics/Combining%20molecular%20dynamics%20with%20Monte%20Carlo%20simulations.pdf][Combining molecular dynamics and Monte Carlo methods]]
                 - [[file:~/Work/literature/Possible%20Master%20topics/Uniform-acceptance%20force-bias%20Monte%20Carlo%20method%20with%20time%20scale%20to%20study%20solid-state%20diffusion.pdf][Uniform-acceptance force-bias Monte Carlo method]]

** TODO Learn Dakota
   CLOCK: [2014-07-29 Tue 14:09]--[2014-07-29 Tue 17:48] =>  3:39
   CLOCK: [2014-07-23 Wed 14:00]--[2014-07-23 Wed 16:56] =>  2:56
   CLOCK: [2014-07-22 Tue 14:00]--[2014-07-22 Tue 17:22] =>  3:22
   - Note taken on [2014-07-23 Wed 17:00] \\
     All notes can be found in [[file:~/dakota/dakota-notes/notes.org][this]] org file.
   - Note taken on [2014-07-22 Tue 17:11] \\
     Aufgabenbeschreibung:

     Im Zuge einer Software zur Ionen-Migration (Berechnung über die Poisson-Nernst-Planck Gleichung) soll ein script geschrieben werden, dass als Input Diffusionswerte, chemisches Potential und erwartete Fehler entgegennimmt und anschließend den elektrischen Fluß bestimmt.
     Dazu soll das Optimierungsprogramm DAKOTA (Design Analysis Kit for Optimization and Terascale Applications) von den SNL verwendet werden.

     Meine Aufgabe ist es nun
     1. Mache mich Dakota vertraut
        + Lese das gesamte Manual (Version 5.4).
        + Schaue, was für das obige Problem wichtig sein kann.
     2. Schreibe ein Script (nach Absprache mit Christian)

     _Poisson-Nernst-Planck Gleichung_
     \partial_t c = \nabla [D (\nabla c + \alpha \nabla \phi + \beta c \nabla \mu )]
     \Delta \phi = \sum_i z_i c_i
*** DONE Installiere Dakota
    CLOSED: [2014-07-23 Wed 16:56]
Problem: Falsche Boost Version?

*** TODO Make short overview about Dakota
    SCHEDULED: <2014-07-24 Thu>
**** TODO Do Second Part of Dakota Tutorial (Chapter two of the manual)
     SCHEDULED: <2014-07-31 Thu 8:00-12:00>
     CLOCK: [2014-07-30 Wed 17:52]
     CLOCK: [2014-07-30 Wed 15:45]--[2014-07-30 Wed 16:25] =>  0:40
     CLOCK: [2014-07-30 Wed 15:20]--[2014-07-30 Wed 15:30] =>  0:10
     CLOCK: [2014-07-30 Wed 14:34]--[2014-07-30 Wed 15:20] =>  0:46
**** DONE Make Appointment with Christian
     SCHEDULED: <2014-07-31 Thu 11:00> DEADLINE: <2014-07-30 Wed>
**** TODO Prepare questions for Christian
     SCHEDULED: <2014-07-31 Thu 10:00>
*** TODO Learn about the Poisson-Nernst-Planck Equation and ionic migration
    SCHEDULED: <2014-08-02 Sat>
1. What is ionic migration.
2. What is the Poisson-Nernst-Planck Equation.
3. How is this related to my task? What do I need to know?


* Arbeitszeit
#+BEGIN: clocktable :maxlevel 3 :scope file :block thisweek
Clock summary at [2014-07-30 Wed 16:25], for week 2014-W31.

| Headline                                     | Time   |      |      |
|----------------------------------------------+--------+------+------|
| *Total time*                                 | *5:15* |      |      |
|----------------------------------------------+--------+------+------|
| Aufgaben                                     | 5:15   |      |      |
| \__ TODO Learn Dakota                        |        | 5:15 |      |
| \_____ TODO Make short overview about Dakota |        |      | 1:36 |
#+END:

** Überstunden
| Week     |     Time |  Overtime |
|----------+----------+-----------|
| 2014-W20 |    10:32 |  01:32:00 |
| 2014-W21 |    09:08 |  00:08:00 |
| 2014-W22 |    12:55 |  03:55:00 |
| 2014-W23 |    10:49 |  01:49:00 |
| 2014-W24 |     7:41 | -01:19:00 |
| 2014-W25 |     8:01 | -00:59:00 |
| 2014-W26 |     5:21 | -03:39:00 |
| 2014-W27 |     5:43 | -03:17:00 |
| 2014-W28 |     4:33 | -04:27:00 |
| 2014-W29 |     0:23 | -08:37:00 |
| 2014-W30 |    11:18 |  02:18:00 |
| 2014-W31 |     5:15 | -03:45:00 |
|----------+----------+-----------|
| Total    | 91:39:00 | -16:21:00 |
#+TBLFM: $3=$2-9*3600;T::@>$2=vsum(@2$2..@-1$2);T::@>$3=vsum(@2$3..@-1$3);T::
