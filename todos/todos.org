#+STARTUP: logdone

* Configurations

** TODO Change passwords
Wait for Mail from IT. Change password if smartcard is there!


* Emacs

** TODO Add smart-mode-line to emacs config. 
** Language evaluation in org mode (see http://zeekat.nl/articles/making-emacs-work-for-me.html#sec-10)
** TODO Qt Auto complete


* Arbeitszeiten
- [2013-12-16 Sat 16:30]--[2013-12-16 Mon 18:00]
- [2013-12-18 Wed 17:30]--[2013-12-18 Wed 19:56]
- [2013-12-19 Thu 14:00]--[2013-12-19 Thu 17:02]
- [2014-01-05 Sun 14:30]--[2014-01-05 Sun 19:30]
- [2014-01-07 Tue 12:17]--[2014-01-07 Tue 14:00]
- [2014-01-09 Thu 12:15]--[2014-01-09 Thu 14:00]
- [2014-01-11 Sat 09:17]--[2014-02-11 Tue 13:15]
- [2014-01-12 Sun 13:25]--[2014-02-12 Wed 17:00]
- [2014-01-13 Mon 13:30]--[2014-01-13 Mon 15:15]
- [2014-01-16 Thu 14:15]--[2014-01-16 Thu 16:32]
- [2014-01-19 Sun 09:06]--[2014-01-19 Sun 13:00]
- [2014-01-20 Mon 16:58]--[2014-01-20 Mon 18:30]
- [2014-01-21 Tue 12:00]--[2014-01-21 Tue 13:55]
- [2014-01-23 Thu 12:15]--[2014-01-23 Thu 13:55]
- [2014-01-25 Sat 09:00]--[2014-01-25 Sat 14:00]
- [2014-01-27 Mon 10:21]--[2014-01-27 Mon 11:30]
- [2014-01-27 Mon 13:35]--[2014-01-27 Mon 15:40]
- [2014-01-28 Tue 14:44]--[2014-01-28 Tue 17:30]
- [2014-01-29 Wed 09:19]--[2014-01-29 Wed 12:25]
- [2014-01-30 Thu 10:30]--[2014-01-30 Thu 11:25]
- [2014-01-30 Thu 12:20]--[2014-01-30 Thu 15:35]


* Nuetzliches

** Gnuplot Befehle
Einen Ueberblick zu nuetzlichen Gnuplot Befehlen kann auf der folgenden Seite gefunden werden: http://people.duke.edu/~hpgavin/gnuplot.html

1. Um ein Data-file (zum Beispiel =*.epot*=) mit Gnuplot zu plotten, verwendet man: \\
   =gnuplot> plot "./argon.epot" using 1:2=. \\
   Hierbei wird die zweite Spalte gegen die erste Spalte aufgetragen. 
2. Dies kann auch mit mehreren Files gleichzeitig getan werden: \\
   =gnuplot> plot "./argon.etot" using 1:2, "./argon.ekin" using 1:2, "./argon.epot" using 1:2=
3. Um den Achsenabschnitt zu veraendern, verwendet man: \\
   =gnuplot> plot "./argon.epot" using 1:2; set yrange [-0.1: 2]=
4. Den urspruenglichen Achsenabschnitt kann man wie folgt wieder herstellen: \\
   =gnuplot> plot "./argon.epot" using 1:2; set autoscale=
5. Mit \\
   =gnuplot> replot= \\
   kann der Plot aktualisiert werden. 
6. Eine Uebersicht von =set= Befehlen: 
   Create a title:                  > =set title "Force-Deflection Data"== \\
   Put a label on the x-axis:       > =set xlabel "Deflection (meters)"== \\
   Put a label on the y-axis:       > =set ylabel "Force (kN)"== \\
   Change the x-axis range:         > =set xrange [0.001:0.005]= \\
   Change the y-axis range:         > =set yrange [20:500]= \\
   Have Gnuplot determine ranges:   > =set autoscale= \\
   Move the key:                    > =set key 0.01,100= \\
   Delete the key:                  > =unset key= \\ 
   Put a label on the plot:         > =set label "yield point" at 0.003, 260= \\
   Remove all labels:               > =unset label= \\
   Plot using log-axes:             > =set logscale= \\
   Plot using log-axes on y-axis:   > =unset logscale; set logscale y= \\
   Change the tic-marks:            > =set xtics (0.002,0.004,0.006,0.008)= \\
   Return to the default tics:      > =unset xtics; set xtics auto= \\ 
   Set output:                      > =set output 'introduction.png'== \\


** Grep Befehl
http://www.panix.com/~elflord/unix/grep.html


** Git Befehle

*** Branches
- Create a new branch:
  =git branch -b <name_of_new_branch>=
- Create a new branch by pulling from a remote branch:
  =git checkout -b <name_of_new_branch> origin/<name_of_branch>=
- Delete a local branch:
  =git branch -d <name_of_branch>=

*** Diff
- Show differences between <branch1> and <branch2>
  =git diff <branch1>..<branch2>=

*** Manipulate changes. 
- Remove untracked files:
	=git clean -f -d=


** Find Befehle

- Find all files with names containing =<pattern>= (wildcards have to be used with a preceeding backslash!):
  =find -name <pattern>= or e.g. =find -name <pattern>\*=


* Aufgaben
** TODO Coulomb-potentials parameters
   - Note taken on [2014-02-01 Sat 16:26] \\
	 There is no doxygen documentation in tremologui.
   - Note taken on [2014-02-01 Sat 15:55] \\
	 Meeting with Christian on [2014-01-30 Thu]. 
	 - [X] Enable auto-complete in emacs and overall configuration
	 - [X] von testing branch ziehen (in separaten lokalen branch testing)
	 - [X] branch in gui machen
	 - [X] Benutze Tremolo-parser für die Coulom-potentials parameters in der GUI, die können in spme.c gefunden (werden in coulomb.c, CoulombInit aufgerufen).
   - Note taken on [2014-02-01 Sat 15:53] \\
	 Created branch 'fixes' in tremologui and branch 'testing' in tremolo.

   - [ ] Replace parameters with potential specific paramters, e.g. cellration for N^2 by N^2 cellratio etc. 
		 For this all occurences of these parameters must be found and changed. 

   - [ ] The important files for that are solparallel_gui and solparallel_data.

   - [ ] Use tremolo-parser for Coulomb-potentials parameters in GUI found in =spme.c= (called in =CoulombInit= in =coulomb.c=).

*** Structure of solparallel_gui and solparallel_data. 
- solparallel_gui.h/cpp contain everyting that is related to the gui of "Solver and parallelization"
- solparallel_data.h/cpp contain everything related to the parameters of "Solver and parallelization"

The method writing the parameters to the =*parameters= file is the =QString SolParallel_Data::toParameterFileString() const= in =solparallel_data.cpp=. 

