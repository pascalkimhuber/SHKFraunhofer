#+STARTUP: logdone

* Organization

** TODO Christian wegen Stunden fragen


* Configurations

** TODO Change passwords
Wait for Mail from IT. Change password if smartcard is there!


* Emacs

** Language evaluation in org mode (see http://zeekat.nl/articles/making-emacs-work-for-me.html#sec-10)
** TODO Qt Auto complete

** TODO Syntax highlighting for doxygen comments in c++ mode. 


* Arbeitszeiten
- [2013-12-16 Sat 16:30]--[2013-12-16 Mon 18:00]

- [2013-12-18 Wed 17:30]--[2013-12-18 Wed 19:56]
- [2013-12-19 Thu 14:00]--[2013-12-19 Thu 17:02]
- [2014-01-05 Sun 14:30]--[2014-01-05 Sun 19:30]

- [2014-01-07 Tue 12:17]--[2014-01-07 Tue 14:00]
- [2014-01-09 Thu 12:15]--[2014-01-09 Thu 14:00]
- [2014-01-11 Sat 09:17]--[2014-02-11 Tue 13:15]
- [2014-01-12 Sun 13:25]--[2014-02-12 Wed 17:00]

- [2014-01-13 Mon 13:30]--[2014-01-13 Mon 15:15]
- [2014-01-16 Thu 14:15]--[2014-01-16 Thu 16:32]
- [2014-01-19 Sun 09:06]--[2014-01-19 Sun 13:00]

- [2014-01-20 Mon 16:58]--[2014-01-20 Mon 18:30]
- [2014-01-21 Tue 12:00]--[2014-01-21 Tue 13:55]
- [2014-01-23 Thu 12:15]--[2014-01-23 Thu 13:55]
- [2014-01-25 Sat 09:00]--[2014-01-25 Sat 14:00]

- [2014-01-27 Mon 10:21]--[2014-01-27 Mon 11:30]
- [2014-01-27 Mon 13:35]--[2014-01-27 Mon 15:40]
- [2014-01-28 Tue 14:44]--[2014-01-28 Tue 17:30]
- [2014-01-29 Wed 09:19]--[2014-01-29 Wed 12:25]
- [2014-01-30 Thu 10:30]--[2014-01-30 Thu 11:25]
- [2014-01-30 Thu 12:20]--[2014-01-30 Thu 15:35]

- [2014-02-03 Mon 13:58]--[2014-02-03 Mon 15:45]
- [2014-02-05 Wed 09:47]--[2014-02-05 Wed 13:45]
- [2014-02-06 Thu 10:00]--[2014-02-06 Thu 12:00]
- [2014-02-06 Thu 13:00]--[2014-02-06 Thu 14:41]
- [2014-02-07 Fri 10:15]--[2014-02-07 Fri 12:00]
- [2014-02-07 Fri 17:00]--[2014-02-07 Fri 18:28]
- [2014-02-08 Sat 11:20]--[2014-02-08 Sat 13:00]

- [2014-02-10 Mon 12:54]--[2014-02-10 Mon 14:54]
- [2014-02-11 Tue 10:13]--[2014-02-11 Tue 11:40]
- [2014-02-12 Wed 12:46]--[2014-02-12 Wed 15:00]
- [2014-02-13 Thu 12:57]--[2014-02-13 Thu 14:00]
- [2014-02-13 Thu 16:12]--[2014-02-13 Thu 18:40]
- [2014-02-14 Fri 10:53]--[2014-02-14 Fri 11:55]
  
- [2014-02-18 Tue 12:54]--[2014-02-18 Tue 16:30]
- [2014-02-19 Wed 09:28]--[2014-02-19 Wed 12:15]
- [2014-02-19 Wed 13:30]--[2014-02-19 Wed 16:06]
- [2014-02-20 Thu 09:28]--[2014-02-20 Thu 11:55]

- [2014-03-06 Thu 08:35]--[2014-03-06 Thu 12:19]

- [2014-03-10 Mon 13:15]--[2014-03-10 Mon 14:15]

- [2014-03-28 Fri 16:00]--[2014-03-28 Fri 17:30]

- [2014-04-01 Tue 13:38]--[2014-04-01 Tue 17:40]

- [2014-04-03 Thu 08:45]--[2014-04-03 Thu 09:45]

- [2014-04-03 Thu 13:30]--[2014-04-03 Thu 17:36]
- [2014-04-06 Sun 16:30]--[2014-04-06 Sun 19:38]

- [2014-04-07 Mon 13:57]--[2014-04-07 Mon 18:00]

  
* Nuetzliches

** Tremolo aktualisieren

Nachdem eine neue Version des Tremolo-Ordners gepullt wurde, kann Tremolo wie folgt aktualisiert werden: 
: cd ~/tremolo/build
: make && make install

Das selbe gilt für Tremologui. 
: cd ~/tremologui/build
: make && make install


** Gnuplot Befehle

Einen Ueberblick zu nuetzlichen Gnuplot Befehlen kann auf der folgenden Seite gefunden werden: http://people.duke.edu/~hpgavin/gnuplot.html

1. Um ein Data-file (zum Beispiel =*.epot*=) mit Gnuplot zu plotten, verwendet man: \\
   : gnuplot> plot "./argon.epot" using 1:2
   Hierbei wird die zweite Spalte gegen die erste Spalte aufgetragen. 
2. Dies kann auch mit mehreren Files gleichzeitig getan werden: \\
   : gnuplot> plot "./argon.etot" using 1:2, "./argon.ekin" using 1:2, "./argon.epot" using 1:2
3. Um den Achsenabschnitt zu veraendern, verwendet man: \\
   : gnuplot> plot "./argon.epot" using 1:2; set yrange [-0.1: 2]
4. Den urspruenglichen Achsenabschnitt kann man wie folgt wieder herstellen: \\
   : gnuplot> plot "./argon.epot" using 1:2; set autoscale
5. Mit \\
   : gnuplot> replot 
   kann der Plot aktualisiert werden. 
6. Eine Uebersicht von =set= Befehlen: 
   Create a title:                  
   : set title "Force-Deflection Data" 
   Put a label on the x-axis:       
   : set xlabel "Deflection (meters)" 
   Put a label on the y-axis:       
   : set ylabel "Force (kN)"
   Change the x-axis range:         
   : set xrange [0.001:0.005]
   Change the y-axis range:         
   : set yrange [20:500] 
   Have Gnuplot determine ranges:   
   : set autoscale
   Move the key:                    
   : set key 0.01,100
   Delete the key:                  
   : unset key
   Put a label on the plot:         
   : set label "yield point" at 0.003, 260
   Remove all labels:               
   : unset label
   Plot using log-axes:             
   : set logscale
   Plot using log-axes on y-axis:   
   : unset logscale; set logscale y
   Change the tic-marks:            
   : set xtics (0.002,0.004,0.006,0.008)
   Return to the default tics:      
   : unset xtics; set xtics auto
   Set output:                      
   : set output 'introduction.png'

   
** Grep Befehle

http://www.panix.com/~elflord/unix/grep.html


** Git Befehle

*** Branches
- Create a new branch:
  : git branch <name_of_new_branch>
- Create a new branch by pulling from a remote branch:
  : git checkout -b <name_of_new_branch> origin/<name_of_branch>
- Delete a local branch:
  : git branch -d <name_of_branch>

*** Diff
- Show differences between <branch1> and <branch2>
  : git diff <branch1>..<branch2>

*** Manipulate changes. 
- Remove untracked files:
  : git clean -f -d

*** Add and remove changes. 
- Remove deleted files from stack:
  : git add -u .

*** Remote repositories
- Add remote repository with name /origin/ (e.g. https://pascalkimhuber@bitbucket.org/pascalkimhuber/stacked.git)
  : git remote add origin <address of remote> 
- Push a local repository to a remote repository with name /origin/ for the first time
  : git push -u origin --all

*** Merging branches
- Merge <branch1> into <branch2>
  : git checkout <branch2>
  : git merge <branch1>
  

** Find Befehle

- Find all files with names containing =<pattern>= (wildcards have to be used with a preceeding backslash!):
  : find -name <pattern> 
  or e.g. 
  : find -name <pattern>\*


** Doxygen Befehle

- [[http://www.stack.nl/~dimitri/doxygen/manual/commands.html#cmdc][List of special commands]]
  

* Aufgaben

** TODO ScaFaCos Bibliothek
   - Note taken on [2014-02-20 Thu 11:43] \\
	 Absprache mit Christian:
	 - Gehe von fcs_... Methoden aus.
	 - Füge nur L-GPL Methoden zur GUI hinzu. (können im README.cmake) eingelesen werden.
	 - Keine Unterscheidung ob ScaFaCos installiert ist oder nicht in der GUI. 
   - Note taken on [2014-02-18 Tue 16:23] \\
	 Treffen mit Christian:
	 Funktionalität für ScaFaCoS
	 - Finde Beispiel und lese Manual dazu durch.
	 - Füge ScaFaCoS hinzu
	 - Enable Barnes-Hut etc. 
	 
	 Danach CMake und Portierung auf Windows.

*** DONE Overview
	 CLOSED: [2014-02-20 Thu 14:19]

**** The following methods are described in the manual:
1. Ewald summation
2. FMM (Fast multipole method)
3. PEPC (Pretty efficient parallel coulomb solver)
4. VMG (Versatile multigrid)
5. P2NFFT (Particle-Particle NFFT)
6. P3M (Particle-Particle-Particle mesh) (NOT WORKING?)

**** Example with the syntax:
Can be found in 
: tremolo/tutorial/10Nacl/nacl.parameters

**** Names of the methods (can be found in =fcs_params.c=)

USE_GPL:
- "direct"
- "ewald"
- "fmm"
- "memd"
- "mmm"
- "pepc"
- "p2nfft"
- "p3m"
- "pp3mg"
- "vmg"

ELSE:
- "direct"
- "ewald"
- "fmm"
- "+emd+"
- "+mmm+"
- "pepc"
- "+p2nfft+"
- "+p3m+"
- "pp3mg"
- "vmg"

Note: in =tremolo-fcs.c= in =ReadFCSCoulombRecord()= an error message is displayed for method not supported. 

**** The parameters for the different methods can be found 
Either in the manual or in different 
: ***_params.c
files. 


*** TODO Implement ScaFaCoS functionality to GUI
	- Note taken on [2014-02-20 Thu 09:37] \\
	  Created new branch 
	  : incorp_scafacos

**** Aim

Add ScaFaCoS methods to tremologui. The following has to be done for this: 
1. In SolParallel_Data
   - determine which parameters have to be added to the SolParallel_Data class.
   - determine how the data should be saved
   - determine which methods have to be changed (in particular for writing and parsing)
   - change appropriate methods
   - add error messages in parse-method whenever a parameter does not exist for a fcs method.
2. In SolParallel_GUI
   - determine which Widgets must be added for the LongrangeButtonGroup
   - determine which Widgets must be added for the LongrangeDataGroup
   - Add Widgets and connections. 


**** Funktion von saveValues() in SolParallel_Data

The saveValues() method is called by 
: ParameterParser::parseFile(). 
The =parseFile= method passes as arguments a keyword list and an identifier list. 
Example of the succession of these lists for the N^2 longrange solver:
1. keyword: coulomb, n2
   identifier: state
2. keyword: coulomb, n2
   identifier: r_cut
3. keyword: coulomb, n2
   identifier: i_degree


**** TODO Add ScaFaCoS methods (only LGPL)

These are: 
- FMM
- PEPC
- PP3MG
- VMG
- Ewald
- direct

Note that the P3M method in the ScaFaCoS-library is not working due to a bug in the code. 

***** DONE Exclude superfluous longrange solver. 
	  CLOSED: [2014-02-20 Thu 14:18]

The following longrange solvers can be excluded from the gui: 
- P3M
- PME
- Barnes-Hut

***** DONE Add Ewald method
	  CLOSED: [2014-04-01 Tue 16:18]

Parameters necessary for =fcs_ewald= method:
- fcs_float alpha (Ewald splitting parameter);
- fcs_int kmax (Kspace cutoff);
- fcs_int maxkmax (maximal Kspace cutoff used by tuning);
- fcs_float r_cut (near field cutoff)
- fcs_float tolerance 
- fcs_int tolerance_type

***** DONE Add direct solver
	  CLOSED: [2014-04-01 Tue 16:18]

Parameters necessary for =fcs_direct= method:
- fcs_int periodic_images[NDIM] = periodic_images_x, periodic_images_y, periodic_images_z
- fcs_float r_cut (near field cutoff)
- fcs_float tolerance
- fcs_int tolerance_type

***** DONE Add FMM method
	  CLOSED: [2014-04-01 Tue 16:18]

Parameters necessary for =fcs_fmm= method: 
- long long balanceload
- fcs_int dipole_correction
- long long maxdepth
- fcs_int potential
- fcs_float radius
- long long unroll_limit
- fcs_float r_cut
- fcs_float tolerance
- fcs_int tolerance_type

***** DONE Add PEPC method
	  CLOSED: [2014-04-01 Tue 16:18]

Parameters necessary for =fcs_pepc= method:
- fcs_int debuglevel
- fcs_int dipole_correction
- fcs_float epsilon
- fcs_int load_balancing
- fcs_float npm
- fcs_int num_walk_threads
- fcs_float theta
- fcs_float r_cut
- fcs_float tolerance
- fcs_int tolerance_type

***** DONE Add PP3MG method
	  CLOSED: [2014-04-01 Tue 16:18]

Parameters necessary for =fcs_pp3mg= method:
- fcs_int degree
- fcs_int ghosts
- fcs_int gridsize[NDIM] = gridsize_x, gridsize_y, gridsize_z
- fcs_int max_iterations
- fcs_float r_cut
- fcs_float tolerance
- fcs_int tolerance_type

***** DONE Add VMG method
	  CLOSED: [2014-04-01 Tue 16:18]

Parameters necessary for =fcs_vmg=
- fcs_int cycle_type
- fcs_int discretization_order
- fcs_int interpolation_order
- fcs_int max_iterations
- fcs_int max_level
- fcs_int near_field_cells
- fcs_float precision
- fcs_int smoothing_steps
- fcs_float r_cut
- fcs_float tolerance
- fcs_int tolerance_type


**** DONE Finish all methods in solparallel_data.cpp
	 CLOSED: [2014-04-01 Tue 16:18]
This includes toString(), parseToParameterString(), saveValues(), getter, setter. 

***** DONE Add getter methods for all new member data.
	  CLOSED: [2014-03-06 Thu 13:46]

***** DONE Add setter methods for all new member data. 
	  CLOSED: [2014-03-19 Wed 11:26]

Wrote all setter declaration in solparallel_data.h. Must still write the definitions. 
	  
***** DONE Finish toString().
	  CLOSED: [2014-03-19 Wed 14:35]

***** DONE Adapt toParameterString() method.
	  CLOSED: [2014-03-27 Thu 14:28]
- The parameter identifiers are written in this todo-file or in the manual given ~/tremolo_test/
- Continue after FMM solver with PP3MG_PMG

***** DONE Adapt saveValues() method.
	  CLOSED: [2014-04-01 Tue 14:54]

***** TODO Change clear() method (set new Default values?). 


**** DONE Add ScaFaCoS methods to solparallel_gui.h
	 CLOSED: [2014-04-03 Thu 15:47]

List of all new parameters:
- tolerance
- tolerance_type
- splittingCoefficientAlpha
- periodic_images_x,y,z
- kmax
- maxkmax
- balanceload
- dipole_correction
- maxdepth
- potential
- radius
- unroll_limit
- degree
- ghosts
- gridsize_x,y,z
- max_iterations
- debuglevel
- epsilon
- load_balancing
- npm
- num_walk_threads
- theta
- cycle_type
- discretization_order
- interpolation_order
- max_level
- near_field_cells
- precision
- smoothing_steps
- epsI
- m
- p
- oversampled_gridsize_x,y,z

***** DONE Add slot defintions for all fcs parameter.
	  CLOSED: [2014-04-03 Thu 09:17]

***** DONE Add QRadioButtons for fcs solvers. 
	  CLOSED: [2014-04-01 Tue 16:51]

***** DONE Add labels and line edits for fcs parameter. 
	  CLOSED: [2014-04-01 Tue 17:29]

**** DONE Add ScaFaCoS methods to solparallel_gui.cpp
	 CLOSED: [2014-04-07 Mon 18:25]

***** DONE Adapt languageChange().
	  CLOSED: [2014-04-03 Thu 14:52]

***** DONE Adapt updateGui_data(). 
	  CLOSED: [2014-04-03 Thu 15:47]

***** DONE Implement slots for all fcs parameter.
	  CLOSED: [2014-04-03 Thu 16:56]

***** DONE Add new buttons, labels and lineEdits to constructor. 
	  CLOSED: [2014-04-07 Mon 18:25]


**** TODO Debugging

***** TODO Invalid parameter error

First try to update branch in tremolo_gui and tremolo. 
Ask Johannes about that. Is this a consequence of the implementation of fcs_solvers? 

***** TODO What about long long vs int?

- long long balanceload
- long long maxdepth
- long long unroll_limit

***** TODO Find origin of method toString(). 

** Questions [0/3]

- [ ] Was ist der Unterschied zwischen GPL und LGPL?
- [ ] In =fcs_params.c= was soll die Unterscheidung =ifdef USE_GPL= und =else=?
- [ ] Is splittingCoefficientG und splittingCoefficientAlpha the same? 
